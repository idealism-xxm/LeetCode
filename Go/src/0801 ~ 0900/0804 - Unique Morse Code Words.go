// 链接：https://leetcode.com/problems/unique-morse-code-words/
// 题意：给定一个单词数组 words ，求这些单词对应的所有莫斯电码中，不同摩斯电码的数量？
//
//      每个英文字母对应的摩斯电码如下：
//      [".-","-...","-.-.","-..",".","..-.","--.","....","..",
//          ".---","-.-",".-..","--","-.","---",".--.","--.-",".-.",
//          "...","-","..-","...-",".--","-..-","-.--","--.."]


// 数据限制：
//  1 <= words.length <= 100
//  1 <= words[i].length <= 12
//  words[i] 仅由英文小写字母组成


// 输入： words = ["gin","zen","gig","msg"]
// 输出： 2
// 解释： 有两种不同的摩斯电码： "--...-." 和 "--...-."
//       "gin" -> "--...-."
//       "zen" -> "--...-."
//       "gig" -> "--...--."
//       "msg" -> "--...--."

// 输入： words = ["a"]
// 输出： 1
// 解释： 有一种不同的摩斯电码： ".-" 
//       "a" -> ".-"


// 思路： Set
//
//      将每个单词都按照转换表转换成莫斯电码，然后放入一个集合中去重，
//      那么集合的大小就是不同摩斯电码的数量。
//
//
//      设单词长度最长为 L 。
//
//      时间复杂度：O(nL)
//          1. 需要遍历全部 O(n) 个单词，每个单词都需要遍历全部 O(L) 个字符。
//      空间复杂度：O(nL)
//          1. 需要维护全部不同的摩斯电码，最差情况下有 O(n) 个不同的摩斯电码；
//              每个莫斯电码的长度都为 O(L)


// 莫斯电码转换表
var MorseCode = [26]string{
    ".-","-...","-.-.","-..",".","..-.","--.","....","..",
    ".---","-.-",".-..","--","-.","---",".--.","--.-",".-.",
    "...","-","..-","...-",".--","-..-","-.--","--..",
}


func uniqueMorseRepresentations(words []string) int {
    codeSet := make(map[string]bool)
    for _, word := range words {
        // 将每个单词转换成莫斯电码
        code := ""
        for _, ch := range word {
            code += MorseCode[ch - 'a']
        }
        // 放入集合中
        codeSet[code] = true
    }
    // 返回集合的大小
    return len(codeSet)
}
