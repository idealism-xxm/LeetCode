# 链接：https://leetcode.com/problems/summary-ranges/
# 题意：给定一个升序无重复的整数数组 nums ，返回对应的每一段连续范围？


# 数据限制：
#  0 <= nums.length <= 20
#  -(2 ^ 31) <= nums[i] <= 2 ^ 31 - 1
#  nums 中的数字各不相同
#  nums 是按升序排序的


# 输入： nums = [0,1,2,4,5,7]
# 输出： ["0->2","4->5","7"]
# 解释： [0,2] 用 "0->2" 表示
#       [4,5] 用 "4->5" 表示
#       [7,7] 用 "7" 表示

# 输入： nums = [0,2,3,4,6,8,9]
# 输出： ["0","2->4","6","8->9"]
# 解释： [0,0] 用 "0" 表示
#       [2,4] 用 "2->4" 表示
#       [6,6] 用 "6" 表示
#       [8,9] 用 "8->9" 表示


# 思路： 双指针
#
#      维护两个指针 l 和 r ，表示 nums[l..=r] 内的数是连续的。
#
#       不断循环处理，直至 r 已经遍历完全部数字。
#
#       每次循环中不断移动 r ，直至到达 nums 末尾 或者 下一个不连续的数字，
#       即 r + 1 < nums.len() && nums[r + 1] == r + 1 时，
#       可以令 r += 1 。
#
#       收集此时的范围 nums[l..=r] ，注意根据范围内数字的数量加入不同格式的字符串。
#      
#       然后更新下一次连续范围，起止下标都从 r + 1 开始，继续循环即可。
#		
#
#		时间复杂度： O(n)
#           1. 只需要遍历全部 O(n) 个数字一次
#		空间复杂度： O(n)
#           1. 最坏情况下，所有的范围都不连续，最后的 res 长度会达到 O(n)


class Solution:
    def summaryRanges(self, nums: List[int]) -> List[str]:
        # res 收集所有的范围
        res = []
        # 左指针 l ，指向当前连续范围的开始下标
        l = 0
        # 右指针 r ，指向当前连续范围的结束下标
        r = 0
        # 如果还有数字，则移动右指针
        while r < len(nums):
            # 不断右移右指针 r ，直至到达 nums 末尾 或者 下一个不连续的数字
            while r + 1 < len(nums) and nums[r + 1] == nums[r] + 1:
                r += 1

            if l == r:
                # 如果当前范围只有 1 个数，则直接转成字符串放入
                res.append(str(nums[l]))
            else:
                # 如果当前范围至少 2 个数，则格式化后放入
                res.append(f"{nums[l]}->{nums[r]}" )

            # 下一次连续范围的起止下标都从 r + 1 开始
            r += 1
            l = r

        return res
